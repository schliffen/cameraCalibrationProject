#
#
#
import numpy as np


cal3dPtLs = np.array([
      [ 42.498349, -90.688198 ],
      [ 42.498338, -90.688232 ],
      [ 42.498229, -90.688179 ],
      [ 42.498231, -90.688216 ],
      [ 42.498205, -90.688171 ],
      [ 42.498248, -90.688020 ],
      [ 42.498221, -90.688014 ],
      [ 42.498253, -90.687983 ],
      [ 42.498368, -90.688038 ],
      [ 42.498369, -90.688001 ]
    ])

cal2dPtLs = np.array([
      [ 1045, 893 ],
      [ 1576, 969 ],
      [ 1593, 415 ],
      [ 1802, 471 ],
      [ 1608, 379 ],
      [ 845, 290 ],
      [ 941, 271 ],
      [ 711, 278 ],
      [ 126, 480 ],
      [ 73, 436 ]
    ])

Homography_matrix = np.array([[-21.997591847327296, -3.745927127290156, 595.151212291002253], [0.048533439450522, -0.279593223283112, -27.417364958786596], [-0.009519266410793, 0.006565856902287, 1.000000000000000]])

if __name__ == "__main__":
    
    # reconstructing 3d from 2d data based on homography
    d2point = np.array([[1045], [893], [1] ])
    d3point = Homography_matrix * d2point
    print("3dpoint", d3point)
